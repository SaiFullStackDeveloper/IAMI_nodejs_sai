{"version":3,"sources":["/Users/apple/Documents/Satya/UpW/Nodejs/iami-nodejs/dist/chunk-YCOP6BXV.js","../src/common/models/redis/user.ts"],"names":[],"mappings":"AAAA;AACE;AACF,sDAA4B;AAC5B;AACA;ACJA,mCAA2C;AAI3C,IAAM,iBAAA,EAAmB,IAAI,oBAAA;AAAA,EACzB,QAAA;AAAA,EACA;AAAA,IACI,OAAA,EAAS;AAAA,MACL,IAAA,EAAM;AAAA,IACV,CAAA;AAAA,IACA,MAAA,EAAQ;AAAA,MACJ,IAAA,EAAM;AAAA,IACV,CAAA;AAAA,IACA,OAAA,EAAS;AAAA,MACL,IAAA,EAAM;AAAA,IACV,CAAA;AAAA,IACA,MAAA,EAAQ;AAAA,MACJ,IAAA,EAAM;AAAA,IACV,CAAA;AAAA,IACA,UAAA,EAAY;AAAA,MACR,IAAA,EAAM;AAAA,IACV,CAAA;AAAA,IACA,SAAA,EAAW;AAAA,MACP,IAAA,EAAM;AAAA,IACV,CAAA;AAAA,IACA,KAAA,EAAO;AAAA,MACH,IAAA,EAAM;AAAA,IACV,CAAA;AAAA,IACA,OAAA,EAAS;AAAA,MACL,IAAA,EAAM;AAAA,IACV;AAAA,EACJ,CAAA;AAAA,EACA;AAAA,IACI,aAAA,EAAe;AAAA,EACnB;AACJ,CAAA;AAEA,IAAM,kBAAA,EAAoB,IAAI,oBAAA;AAAA,EAC1B,SAAA;AAAA,EACA;AAAA,IACI,KAAA,EAAO;AAAA,MACH,IAAA,EAAM;AAAA,IACV,CAAA;AAAA,IACA,QAAA,EAAU;AAAA,MACN,IAAA,EAAM;AAAA,IACV,CAAA;AAAA,IACA,OAAA,EAAS;AAAA,MACL,IAAA,EAAM;AAAA,IACV,CAAA;AAAA,IACA,MAAA,EAAQ;AAAA,MACJ,IAAA,EAAM;AAAA,IACV,CAAA;AAAA,IACA,OAAA,EAAS;AAAA,MACL,IAAA,EAAM;AAAA,IACV,CAAA;AAAA,IACA,MAAA,EAAQ;AAAA,MACJ,IAAA,EAAM;AAAA,IACV,CAAA;AAAA,IACA,SAAA,EAAW;AAAA,MACP,IAAA,EAAM;AAAA,IACV,CAAA;AAAA,IACA,KAAA,EAAO;AAAA,MACH,IAAA,EAAM;AAAA,IACV,CAAA;AAAA,IACA,iBAAA,EAAmB;AAAA,MACf,IAAA,EAAM;AAAA,IACV,CAAA;AAAA,IACA,gBAAA,EAAkB;AAAA,MACd,IAAA,EAAM;AAAA,IACV,CAAA;AAAA,IACA,WAAA,EAAa;AAAA,MACT,IAAA,EAAM;AAAA,IACV,CAAA;AAAA,IACA,aAAA,EAAe;AAAA,MACX,IAAA,EAAM;AAAA,IACV,CAAA;AAAA,IACA,WAAA,EAAa;AAAA,MACT,IAAA,EAAM;AAAA,IACV,CAAA;AAAA,IACA,cAAA,EAAgB;AAAA,MACZ,IAAA,EAAM;AAAA,IACV;AAAA,EACJ,CAAA;AAAA,EACA;AAAA,IACI,aAAA,EAAe;AAAA,EACnB;AACJ,CAAA;AAIO,IAAM,0BAAA,EAA4B,IAAI,wBAAA,CAAqC,gBAAA,EAAkB,sBAAK,CAAA;AAClG,IAAM,2BAAA,EAA6B,IAAI,wBAAA,CAAsC,iBAAA,EAAmB,sBAAK,CAAA;ADD5G;AACA;AACE;AACA;AACF,+HAAC","file":"/Users/apple/Documents/Satya/UpW/Nodejs/iami-nodejs/dist/chunk-YCOP6BXV.js","sourcesContent":[null,"import { Schema, Repository, Entity } from 'redis-om'\nimport { redis } from '@/common/config/redis'\nimport { UserSessionTypes, UserSignupTypes, UserTypes } from '@/common/types/user'\n\nconst userSignUpSchema = new Schema(\n    'Signup',\n    {\n        \"email\": {\n            type: 'string',\n        },\n        \"name\": {\n            type: 'string',\n        },\n        \"phone\": {\n            type: 'string',\n        },\n        \"role\": {\n            type: 'string',\n        },\n        \"password\": {\n            type: 'string',\n        },\n        \"address\": {\n            type: 'string',\n        },\n        \"ABN\": {\n            type: 'string',\n        },\n        \"token\": {\n            type: 'string',\n        }\n    },\n    {\n        dataStructure: 'JSON',\n    }\n)\n\nconst userSessionSchema = new Schema(\n    'Session',\n    {\n        \"_id\": {\n            type: 'string',\n        },\n        \"userId\": {\n            type: 'string',\n        },\n        \"email\": {\n            type: 'string',\n        },\n        \"name\": {\n            type: 'string',\n        },\n        \"phone\": {\n            type: 'string',\n        },\n        \"role\": {\n            type: 'string',\n        },\n        \"address\": {\n            type: 'string',\n        },\n        \"ABN\": {\n            type: 'string',\n        },\n        \"isEmailVerified\": {\n            type: 'boolean'\n        },\n        \"isUserVerified\": {\n            type: 'boolean'\n        },\n        \"createdAt\": {\n            type: 'date'\n        },\n        \"accessToken\": {\n            type: 'string',\n        },\n        \"expiresIn\": {\n            type: 'string',\n        },\n        \"refreshToken\": {\n            type: 'string',\n        },\n    },\n    {\n        dataStructure: 'JSON',\n    }\n)\n\n\n\nexport const userSignupRedisRepository = new Repository<UserSignupTypes & Entity>(userSignUpSchema, redis)\nexport const userSessionRedisRepository = new Repository<UserSessionTypes & Entity>(userSessionSchema, redis)"]}