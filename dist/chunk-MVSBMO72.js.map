{"version":3,"sources":["/Users/apple/Documents/Satya/UpW/Nodejs/iami-nodejs/dist/chunk-MVSBMO72.js","../src/api/v1/internal/settings/settingsModel.ts"],"names":[],"mappings":"AAAA;AACE;AACF,sDAA4B;AAC5B;AACA;ACJA,8DAAqC;AACrC,0BAAkB;AAClB,yHAAuC;AAGvC,gDAAA,MAAsB,CAAA;AAGf,IAAM,iBAAA,EAAmB,MAAA,CAAE,MAAA,CAAO;AAAA,EACrC,IAAA,EAAM,MAAA,CAAE,MAAA,CAAO;AAAA,IACX,KAAA,EAAO,MAAA,CAAE,MAAA,CAAO,EAAE,cAAA,EAAgB,oBAAoB,CAAC,CAAA,CAAE,KAAA;AAAA,MACrD;AAAA,QACI,OAAA,EAAS;AAAA,MACb;AAAA,IACJ,CAAA;AAAA,IACA,IAAA,EAAM,MAAA,CAAE,MAAA,CAAO,EAAE,cAAA,EAAgB,mBAAmB,CAAC,CAAA;AAAA,IACrD,KAAA,EAAO,MAAA,CAAE,MAAA,CAAO,EAAE,cAAA,EAAgB,2BAA2B,CAAC,CAAA,CAAE,SAAA,CAAU,CAAC,GAAA,EAAK,GAAA,EAAA,GAAQ;AACpF,MAAA,MAAM,MAAA,EAAQ,wCAAA,GAA2B,EAAK;AAAA;AAAA,QAE1C,cAAA,EAAgB,IAAA;AAAA;AAAA;AAAA,QAIhB,OAAA,EAAS;AAAA,MACb,CAAC,CAAA;AAGD,MAAA,GAAA,CAAI,MAAA,GAAS,KAAA,CAAM,OAAA,CAAQ,CAAA,EAAG;AAC1B,QAAA,OAAO,KAAA,CAAM,MAAA;AAAA,MACjB;AAGA,MAAA,GAAA,CAAI,QAAA,CAAS;AAAA,QACT,IAAA,EAAM,MAAA,CAAE,YAAA,CAAa,MAAA;AAAA,QACrB,OAAA,EAAS;AAAA,MACb,CAAC,CAAA;AACD,MAAA,OAAO,MAAA,CAAE,KAAA;AAAA,IACb,CAAC,CAAA;AAAA,IACD,IAAA,EAAM,gCAAA,CAAgB,OAAA,CAAQ,CAAC,YAAA,EAAc,MAAM,CAAC,CAAA;AAAA,IACpD,OAAA,EAAS,MAAA,CAAE,MAAA,CAAO,CAAA,CAAE,GAAA,CAAI,EAAE,CAAA,CAAE,QAAA,CAAS,CAAA;AAAA,IACrC,GAAA,EAAK,MAAA,CAAE,MAAA,CAAO,CAAA,CAAE,QAAA,CAAS;AAAA,EAC7B,CAAC,CAAA,CAAE,MAAA,CAAO,CAAA,CACL,WAAA,CAAY,CAAC,IAAA,EAAM,GAAA,EAAA,GAAQ;AACxB,IAAA,GAAA,CAAI,IAAA,CAAK,KAAA,IAAS,QAAA,GAAW,CAAC,IAAA,CAAK,OAAA,EAAS;AACxC,MAAA,GAAA,CAAI,QAAA,CAAS;AAAA,QACT,IAAA,EAAM,MAAA,CAAE,YAAA,CAAa,MAAA;AAAA,QACrB,OAAA,EAAS,qBAAA;AAAA,QACT,IAAA,EAAM,CAAC,SAAS;AAAA,MACpB,CAAC,CAAA;AAAA,IACL;AAEA,IAAA,GAAA,CAAI,IAAA,CAAK,KAAA,IAAS,QAAA,GAAW,IAAA,CAAK,GAAA,EAAK;AACnC,MAAA,GAAA,CAAI,QAAA,CAAS;AAAA,QACT,IAAA,EAAM,MAAA,CAAE,YAAA,CAAa,MAAA;AAAA,QACrB,OAAA,EAAS,qBAAA;AAAA,QACT,IAAA,EAAM,CAAC,KAAK;AAAA,MAChB,CAAC,CAAA;AAAA,IACL;AAAA,EACJ,CAAC;AACT,CAAC,CAAA;ADLD;AACA;AACE;AACF,4CAAC","file":"/Users/apple/Documents/Satya/UpW/Nodejs/iami-nodejs/dist/chunk-MVSBMO72.js","sourcesContent":[null,"import { extendZodWithOpenApi } from \"@asteasolutions/zod-to-openapi\";\nimport { z } from \"zod\";\nimport parsePhoneNumberFromString from 'libphonenumber-js';\nimport { UserRolesSchema } from \"@/common/types/user\";\n\nextendZodWithOpenApi(z);\n\n\nexport const CreateUserSchema = z.object({\n    body: z.object({\n        email: z.string({ required_error: 'Email is required' }).email(\n            {\n                message: 'Invalid email address'\n            }\n        ),\n        name: z.string({ required_error: 'Name is required' }),\n        phone: z.string({ required_error: 'Phone number is required' }).transform((arg, ctx) => {\n            const phone = parsePhoneNumberFromString(arg, {\n                // set this to use a default country when the phone number omits country code\n                defaultCountry: 'AU',\n\n                // set to false to require that the whole string is exactly a phone number,\n                // otherwise, it will search for a phone number anywhere within the string\n                extract: false,\n            });\n\n            // when it's good\n            if (phone && phone.isValid()) {\n                return phone.number;\n            }\n\n            // when it's not\n            ctx.addIssue({\n                code: z.ZodIssueCode.custom,\n                message: 'Invalid phone number',\n            });\n            return z.NEVER;\n        }),\n        role: UserRolesSchema.exclude(['SuperAdmin', 'User']),\n        address: z.string().min(10).optional(),\n        ABN: z.string().optional(),\n    }).strict()\n        .superRefine((data, ctx) => {\n            if (data.role === 'Agent' && !data.address) {\n                ctx.addIssue({\n                    code: z.ZodIssueCode.custom,\n                    message: 'Address is required',\n                    path: ['address'],\n                });\n            }\n\n            if (data.role === 'Admin' && data.ABN) {\n                ctx.addIssue({\n                    code: z.ZodIssueCode.custom,\n                    message: 'ABN is not required',\n                    path: ['ABN'],\n                })\n            }\n        })\n})"]}