{"version":3,"sources":["/Users/apple/Documents/Satya/UpW/Nodejs/iami-nodejs/dist/chunk-E5IYCE7T.js","../src/common/utils/httpHandlers.ts"],"names":[],"mappings":"AAAA;AACE;AACF,sDAA4B;AAC5B;AACA;ACHA,oDAA4B;AAKrB,IAAM,sBAAA,EAAwB,CAAC,eAAA,EAAuC,QAAA,EAAA,GAAuB;AAClG,EAAA,OAAO,QAAA,CAAS,MAAA,CAAO,eAAA,CAAgB,UAAU,CAAA,CAAE,IAAA,CAAK,eAAe,CAAA;AACzE,CAAA;AAEO,IAAM,gBAAA,EAAkB,CAAC,MAAA,EAAA,GAAsB,CAAC,GAAA,EAAc,GAAA,EAAe,IAAA,EAAA,GAAuB;AACzG,EAAA,IAAI;AACF,IAAA,MAAA,CAAO,KAAA,CAAM,EAAE,IAAA,EAAM,GAAA,CAAI,IAAA,EAAM,KAAA,EAAO,GAAA,CAAI,KAAA,EAAO,MAAA,EAAQ,GAAA,CAAI,OAAO,CAAC,CAAA;AACrE,IAAA,IAAA,CAAK,CAAA;AAAA,EACP,EAAA,MAAA,CAAS,GAAA,EAAK;AACZ,IAAA,MAAM,aAAA,EAAe,CAAA,eAAA,EAAmB,GAAA,CAAiB,MAAA,CAAO,GAAA,CAAI,CAAC,CAAA,EAAA,GAAM,CAAA,CAAE,OAAO,CAAA,CAAE,IAAA,CAAK,IAAI,CAAC,CAAA,CAAA;AACjE,IAAA;AAC+C,IAAA;AAC7B,IAAA;AACnD,EAAA;AACF;ADAuF;AACA;AACA;AACA;AACA","file":"/Users/apple/Documents/Satya/UpW/Nodejs/iami-nodejs/dist/chunk-E5IYCE7T.js","sourcesContent":[null,"import type { NextFunction, Request, Response } from \"express\";\nimport { StatusCodes } from \"http-status-codes\";\nimport type { ZodError, ZodSchema } from \"zod\";\n\nimport { ServiceResponse } from \"@/common/models/serviceResponse\";\n\nexport const handleServiceResponse = (serviceResponse: ServiceResponse<any>, response: Response) => {\n  return response.status(serviceResponse.statusCode).send(serviceResponse);\n};\n\nexport const validateRequest = (schema: ZodSchema) => (req: Request, res: Response, next: NextFunction) => {\n  try {\n    schema.parse({ body: req.body, query: req.query, params: req.params });\n    next();\n  } catch (err) {\n    const errorMessage = `Invalid input: ${(err as ZodError).errors.map((e) => e.message).join(\", \")}`;\n    const statusCode = StatusCodes.BAD_REQUEST;\n    const serviceResponse = ServiceResponse.failure(errorMessage, null, statusCode);\n    return handleServiceResponse(serviceResponse, res);\n  }\n}; \n\n\n"]}