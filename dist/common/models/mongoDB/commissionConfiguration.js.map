{"version":3,"sources":["/Users/apple/Documents/Satya/UpW/Nodejs/iami-nodejs/dist/common/models/mongoDB/commissionConfiguration.js","../../../../src/common/models/mongoDB/commissionConfiguration.ts"],"names":[],"mappings":"AAAA,+GAAmC;AACnC;AACA;ACDA,oCAA8B;AAE9B,IAAM,iBAAA,EAAmB,IAAI,qBAAA;AAAA,EACzB;AAAA,IACI,SAAA,EAAW,MAAA;AAAA,IACX,QAAA,EAAU,MAAA;AAAA,IACV,SAAA,EAAW,MAAA;AAAA,IACX,UAAA,EAAY,MAAA;AAAA,IACZ,IAAA,EAAM,EAAE,IAAA,EAAM,MAAA,EAAQ,OAAA,EAAS,aAAa;AAAA,EAChD,CAAA;AAAA,EACA;AAAA,IACI,UAAA,EAAY,EAAE,SAAA,EAAW,IAAA,EAAM,SAAA,EAAW,KAAK;AAAA,EACnD;AACJ,CAAA;AAGA,IAAM,gBAAA,EAAkB,6BAAA,UAAM,EAAY,gBAAgB,CAAA;AAEnD,IAAM,iBAAA,EAAmB,MAAA,CAAO,IAAA,EAAA,GAAiB;AACpD,EAAA,IAAI;AACA,IAAA,MAAM,eAAA,EAAiB,MAAM,eAAA,CAAgB,OAAA,CAAQ,CAAA;AAErD,IAAA,GAAA,CAAI,cAAA,EAAgB;AAEhB,MAAA,MAAM,cAAA,EAAgB,MAAM,eAAA,CAAgB,gBAAA;AAAA,QACxC,EAAE,GAAA,EAAK,cAAA,CAAe,IAAI,CAAA;AAAA;AAAA,QAC1B,EAAE,IAAA,EAAM,KAAK,CAAA;AAAA;AAAA,QACb,EAAE,GAAA,EAAK,KAAK;AAAA;AAAA,MAChB,CAAA;AACA,MAAA,OAAO,aAAA;AAAA,IACX,EAAA,KAAO;AAEH,MAAA,MAAM,UAAA,EAAY,MAAM,eAAA,CAAgB,MAAA,CAAO,IAAI,CAAA;AACnD,MAAA,OAAO,SAAA;AAAA,IACX;AAAA,EACJ,EAAA,MAAA,CAAS,KAAA,EAAO;AACZ,IAAA,MAAM,IAAI,KAAA,CAAM,CAAA,qCAAA,CAAuC,CAAA;AAAA,EAC3D;AACJ,CAAA;AAGO,IAAM,qBAAA,EAAuB,MAAA,CAAA,EAAA,GAAY;AAC5C,EAAA,OAAO,MAAM,eAAA,CAAgB,IAAA,CAAK,EAAE,IAAA,EAAM,aAAa,CAAC,CAAA;AAC5D,CAAA;ADHA;AACE;AACA;AACF,iGAAC","file":"/Users/apple/Documents/Satya/UpW/Nodejs/iami-nodejs/dist/common/models/mongoDB/commissionConfiguration.js","sourcesContent":[null,"import { UserTypes } from '@/common/types/user'\nimport { Schema, model } from 'mongoose'\n\nconst commissionSchema = new Schema(\n    {\n        Liability: Number,\n        Property: Number,\n        AgentFees: Number,\n        BrokerFees: Number,\n        type: { type: String, default: 'commission' },\n    },\n    {\n        timestamps: { createdAt: true, updatedAt: true },\n    }\n);\n\n\nconst commissionModel = model('settings', commissionSchema)\n\nexport const updateCommission = async (data: Object) => {\n    try {\n        const existingRecord = await commissionModel.findOne(); // Check if a record exists\n\n        if (existingRecord) {\n            // Update the existing record\n            const updatedRecord = await commissionModel.findOneAndUpdate(\n                { _id: existingRecord._id }, // Find the existing record by ID\n                { $set: data },              // Update fields with the provided data\n                { new: true }                // Return the updated document\n            );\n            return updatedRecord;\n        } else {\n            // No record exists, create a new one\n            const newRecord = await commissionModel.create(data);\n            return newRecord;\n        }\n    } catch (error) {\n        throw new Error(`Failed to update or create commission`);\n    }\n};\n\n\nexport const getCommissionRecords = async () => {\n    return await commissionModel.find({ type: 'commission' });\n}"]}