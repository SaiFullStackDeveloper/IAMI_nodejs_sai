{"version":3,"sources":["/Users/apple/Documents/Satya/UpW/Nodejs/iami-nodejs/dist/chunk-X5VRHMWC.js","../src/common/utils/common.ts"],"names":[],"mappings":"AAAA;ACAO,IAAM,eAAA,EAAiB,CAAC,KAAA,EAAA,GAAkB;AAC7C,EAAA,OAAO,IAAI,IAAA,CAAK,YAAA,CAAa,OAAA,EAAS;AAAA,IAClC,KAAA,EAAO,UAAA;AAAA,IACP,QAAA,EAAU,KAAA;AAAA,IACV,qBAAA,EAAuB,CAAA;AAAA,IACvB,qBAAA,EAAuB;AAAA,EAC3B,CAAC,CAAA,CAAE,MAAA,CAAO,KAAK,CAAA;AACnB,CAAA;AAGO,IAAM,cAAA,EAAgB,CAAC,cAAA,EAAA,GAAmC;AAC7D,EAAA,OAAO,cAAA,CAAe,OAAA,CAAQ,YAAA,EAAc,EAAE,CAAA;AAClD,CAAA;AAEO,IAAM,iBAAA,EAAmB,CAAA,EAAA,GAAM;AAClC,EAAA,MAAM,YAAA,EAAA,iBAAc,IAAI,IAAA,CAAK,CAAA,CAAA,CAAE,WAAA,CAAY,CAAA;AAC3C,EAAA,OAAO,KAAA,CAAM,IAAA,CAAK,EAAE,MAAA,EAAQ,EAAE,CAAA,EAAG,CAAC,CAAA,EAAG,CAAA,EAAA,GAAM,MAAA,CAAO,YAAA,EAAc,CAAC,CAAC,CAAA;AACtE,CAAA;AAEO,IAAM,iBAAA,EAAmB,CAAC,MAAA,EAAA,GAA2B;AACxD,EAAA,MAAM,QAAA,EAAU,oEAAA;AAChB,EAAA,IAAI,SAAA,EAAW,EAAA;AACf,EAAA,IAAA,CAAA,IAAS,EAAA,EAAI,CAAA,EAAG,EAAA,EAAI,MAAA,EAAQ,CAAA,EAAA,EAAK;AAC7B,IAAA,MAAM,YAAA,EAAc,IAAA,CAAK,KAAA,CAAM,IAAA,CAAK,MAAA,CAAO,EAAA,EAAI,OAAA,CAAQ,MAAM,CAAA;AAC7D,IAAA,SAAA,GAAY,OAAA,CAAQ,WAAW,CAAA;AAAA,EACnC;AACA,EAAA,OAAO,QAAA;AACX,CAAA;ADFA;AACA;AACE;AACA;AACA;AACA;AACF,yKAAC","file":"/Users/apple/Documents/Satya/UpW/Nodejs/iami-nodejs/dist/chunk-X5VRHMWC.js","sourcesContent":[null,"export const formatCurrency = (value: number) => {\n    return new Intl.NumberFormat(\"en-US\", {\n        style: \"currency\",\n        currency: \"USD\",\n        maximumFractionDigits: 0,\n        minimumFractionDigits: 0,\n    }).format(value);\n};\n\n\nexport const parseCurrency = (formattedValue: string): string => {\n    return formattedValue.replace(/[^0-9.-]+/g, \"\");\n};\n\nexport const generateSixYears = () => {\n    const currentYear = new Date().getFullYear();\n    return Array.from({ length: 6 }, (_, i) => String(currentYear - i));\n};\n\nexport const generatePassword = (length: number): string => {\n    const charset = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$\";\n    let password = \"\";\n    for (let i = 0; i < length; i++) {\n        const randomIndex = Math.floor(Math.random() * charset.length);\n        password += charset[randomIndex];\n    }\n    return password;\n}"]}