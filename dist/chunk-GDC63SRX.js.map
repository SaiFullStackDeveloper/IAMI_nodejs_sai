{"version":3,"sources":["/Users/apple/Documents/Satya/UpW/Nodejs/iami-nodejs/dist/chunk-GDC63SRX.js","../src/common/models/serviceResponse.ts"],"names":[],"mappings":"AAAA;ACAA,oDAA4B;AAC5B,0BAAkB;AAEX,IAAM,gBAAA,EAAN,MAAM,iBAA0B;AAAA,EAC5B;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EAED,WAAA,CAAY,OAAA,EAAkB,OAAA,EAAiB,IAAA,EAAS,UAAA,EAAoB;AAClF,IAAA,IAAA,CAAK,QAAA,EAAU,OAAA;AACf,IAAA,IAAA,CAAK,QAAA,EAAU,OAAA;AACf,IAAA,IAAA,CAAK,KAAA,EAAO,IAAA;AACZ,IAAA,IAAA,CAAK,WAAA,EAAa,UAAA;AAAA,EACpB;AAAA,EAEA,OAAO,OAAA,CAAW,OAAA,EAAiB,IAAA,EAAS,WAAA,EAAqB,4BAAA,CAAY,EAAA,EAAI;AAC/E,IAAA,OAAO,IAAI,gBAAA,CAAgB,IAAA,EAAM,OAAA,EAAS,IAAA,EAAM,UAAU,CAAA;AAAA,EAC5D;AAAA,EAEA,OAAO,OAAA,CAAW,OAAA,EAAiB,IAAA,EAAS,WAAA,EAAqB,4BAAA,CAAY,WAAA,EAAa;AACxF,IAAA,OAAO,IAAI,gBAAA,CAAgB,KAAA,EAAO,OAAA,EAAS,IAAA,EAAM,UAAU,CAAA;AAAA,EAC7D;AACF,CAAA;AAEO,IAAM,sBAAA,EAAwB,CAAyB,UAAA,EAAA,GAC5D,MAAA,CAAE,MAAA,CAAO;AAAA,EACP,OAAA,EAAS,MAAA,CAAE,OAAA,CAAQ,CAAA;AAAA,EACnB,OAAA,EAAS,MAAA,CAAE,MAAA,CAAO,CAAA;AAAA,EAClB,IAAA,EAAM,UAAA,CAAW,QAAA,CAAS,CAAA;AAAA,EAC1B,UAAA,EAAY,MAAA,CAAE,MAAA,CAAO;AACvB,CAAC,CAAA;ADJH;AACA;AACE;AACA;AACF,iGAAC","file":"/Users/apple/Documents/Satya/UpW/Nodejs/iami-nodejs/dist/chunk-GDC63SRX.js","sourcesContent":[null,"import { StatusCodes } from \"http-status-codes\";\nimport { z } from \"zod\";\n\nexport class ServiceResponse<T = null> {\n  readonly success: boolean;\n  readonly message: string;\n  readonly data: T;\n  readonly statusCode: number;\n\n  private constructor(success: boolean, message: string, data: T, statusCode: number) {\n    this.success = success;\n    this.message = message;\n    this.data = data;\n    this.statusCode = statusCode;\n  }\n\n  static success<T>(message: string, data: T, statusCode: number = StatusCodes.OK) {\n    return new ServiceResponse(true, message, data, statusCode);\n  }\n\n  static failure<T>(message: string, data: T, statusCode: number = StatusCodes.BAD_REQUEST) {\n    return new ServiceResponse(false, message, data, statusCode);\n  }\n}\n\nexport const ServiceResponseSchema = <T extends z.ZodTypeAny>(dataSchema: T) =>\n  z.object({\n    success: z.boolean(),\n    message: z.string(),\n    data: dataSchema.optional(),\n    statusCode: z.number(),\n  });\n"]}