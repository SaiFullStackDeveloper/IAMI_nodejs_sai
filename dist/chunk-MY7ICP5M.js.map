{"version":3,"sources":["/Users/apple/Documents/Satya/UpW/Nodejs/iami-nodejs/dist/chunk-MY7ICP5M.js","../src/common/config/email.ts"],"names":[],"mappings":"AAAA;AACE;AACF,sDAA4B;AAC5B;AACA;ACJA,oCAA+B;AAE/B,gGAAuB;AACvB,gEAAe;AACf,wEAAiB;AAEjB,IAAM,EAAE,UAAA,EAAY,QAAA,EAAU,iBAAiB,EAAA,EAAI,oBAAA;AAEnD,IAAM,GAAA,EAAK,IAAI,6BAAA,CAAe;AAAA,EAC1B,KAAA,EAAO;AACX,CAAC,CAAA;AAGM,IAAM,UAAA,EAAY,CAAC,IAAA,EAAc,IAAA,EAAA,GAAiB;AAGrD,EAAA,MAAM,aAAA,EAAe,cAAA,CAAK,OAAA;AAAA,IACtB,SAAA;AAAA,IACA,SAAA,IAAa,cAAA,EAAgB,mBAAA,EAAqB,aAAA;AAAA,IAClD;AAAA,EACF,CAAA;AACF,EAAA,MAAM,eAAA,EAAiB,YAAA,CAAG,YAAA,CAAa,YAAA,EAAc,MAAM,CAAA;AAG3D,EAAA,MAAM,SAAA,EAAW,oBAAA,CAAW,OAAA,CAAQ,cAAA,EAAgB;AAAA,IAChD,QAAA,EAAU;AAAA,EACd,CAAC,CAAA;AAGD,EAAA,OAAO,QAAA,CAAS,IAAI,CAAA;AACxB,CAAA;AAEO,IAAM,YAAA,EAAc,MAAA,CAAO,KAAA,EAAe,IAAA,EAAc,IAAA,EAAA,GAAiB;AAE5E,EAAA,MAAM,KAAA,EAAO,SAAA,CAAU,wBAAA,EAA0B;AAAA,IAC7C,IAAA;AAAA,IACA;AAAA,EACJ,CAAC,CAAA;AAED,EAAA,MAAM,UAAA,EAAY,SAAA,CAAU,8BAAA,EAAgC;AAAA,IACxD,IAAA;AAAA,IACA;AAAA,EACJ,CAAC,CAAA;AAED,EAAA,IAAI;AAEA,IAAA,MAAM,EAAA,CAAG,IAAA,CAAK;AAAA,MACV,IAAA,EAAM;AAAA,QACF,IAAA,EAAM,YAAA;AAAA,QACN,KAAA,EAAO;AAAA,MACX,CAAA;AAAA,MACA,EAAA,EAAI,CAAC;AAAA,QACD,KAAA;AAAA,QACA;AAAA,MACJ,CAAC,CAAA;AAAA,MACD,OAAA,EAAS,CAAA,EAAA;AACT,MAAA;AACM,MAAA;AACT,IAAA;AACO,EAAA;AACI,IAAA;AAChB,EAAA;AACJ;AAEa;AAEI,EAAA;AACT,IAAA;AACA,IAAA;AACH,EAAA;AAEK,EAAA;AACF,IAAA;AACA,IAAA;AACH,EAAA;AAEG,EAAA;AACS,IAAA;AACC,MAAA;AACI,QAAA;AACC,QAAA;AACX,MAAA;AACK,MAAA;AACD,QAAA;AACH,MAAA;AACQ,MAAA;AACT,MAAA;AACM,MAAA;AACT,IAAA;AAEO,EAAA;AACI,IAAA;AAChB,EAAA;AACJ;ADfgB;AACA;AACA;AACA;AACA;AACA","file":"/Users/apple/Documents/Satya/UpW/Nodejs/iami-nodejs/dist/chunk-MY7ICP5M.js","sourcesContent":[null,"import { MailtrapClient } from \"mailtrap\"\nimport { env } from \"./env\";\nimport Handlebars from \"handlebars\";\nimport fs from \"fs\";\nimport path from \"path\";\n\nconst { FROM_EMAIL, NODE_ENV, MAILTRAP_API_KEY } = env\n\nconst mg = new MailtrapClient({\n    token: MAILTRAP_API_KEY,\n});\n\n\nexport const emailHtml = (file: string, data: Object) => {\n    // Read the Handlebars template file\n    // const templatePath = path.join(__dirname, NODE_ENV === 'development' ? '../../templates' : \"./templates\", file);\n    const templatePath = path.resolve(\n        __dirname,\n        NODE_ENV === 'development' ? '../src/templates' : './templates',\n        file\n      );\n    const templateSource = fs.readFileSync(templatePath, \"utf8\");\n\n    // Compile the template with Handlebars\n    const template = Handlebars.compile(templateSource, {\n        noEscape: true\n    });\n\n    // Generate the email HTML with the provided data\n    return template(data);\n}\n\nexport const signupEmail = async (email: string, name: string, link: string) => {\n\n    const html = emailHtml('auth/signup/signup.hbs', {\n        name,\n        link\n    })\n\n    const plainText = emailHtml('auth/signup/signup-plain.hbs', {\n        name,\n        link\n    })\n\n    try {\n\n        await mg.send({\n            from: {\n                name: \"Iamiinsure\",\n                email: FROM_EMAIL\n            },\n            to: [{\n                email: email,\n                name: name\n            }],\n            subject: `${name} - Email Verification`,\n            html: html,\n            text: plainText\n        })\n    } catch (e) {\n        console.log(e)\n    }\n}\n\nexport const forgotEmail = async (email: string, name: string, link: string) => {\n\n    const html = emailHtml('auth/forgot/forgot.hbs', {\n        name,\n        link\n    })\n\n    const plainText = emailHtml('auth/forgot/forgot-plain.hbs', {\n        name,\n        link\n    })\n\n    try {\n        await mg.send({\n            from: {\n                name: \"Iamiinsure\",\n                email: FROM_EMAIL\n            },\n            to: [{\n                email: email,\n            }],\n            subject: `${name} - Forgot Password Link`,\n            html: html,\n            text: plainText\n        })\n\n    } catch (e) {\n        console.log(e)\n    }\n}"]}