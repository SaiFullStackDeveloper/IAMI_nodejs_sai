{"version":3,"sources":["/Users/apple/Documents/Satya/UpW/Nodejs/iami-nodejs/dist/chunk-4QGOQSDI.js","../src/api/v1/forms/insurance/insuranceStaticData.ts"],"names":[],"mappings":"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","file":"/Users/apple/Documents/Satya/UpW/Nodejs/iami-nodejs/dist/chunk-4QGOQSDI.js","sourcesContent":[null,"import { generateSixYears, parseCurrency } from \"@/common/utils/common\";\nimport { z } from \"zod\";\n\n\n\nexport const LOCATION_TYPE = [\n    \"Modern Office Block\",\n    \"Normal Property\",\n    \"Secured Shopping Centre\",\n] as const;\n\nexport const LOCATION_TYPE_WITH_VALUE = {\n    \"Modern Office Block\": \"MODOB\",\n    \"Normal Property\": \"NORPR\",\n    \"Secured Shopping Centre\": \"SECSC\",\n}\n\nexport const TYPE_OF_BUSINESS = [\n    \"Business Operations Only\",\n    \"Property Owner Only\",\n    \"Property Owner And Business Operations\",\n] as const;\n\nexport const TYPE_OF_BUSINESS_WITH_VALUE = {\n    \"Business Operations Only\": \"BOO\",\n    \"Property Owner Only\": \"POO\",\n    \"Property Owner And Business Operations\": \"POBO\",\n}\n\n\nexport const COVERAGES = [\n    \"Business Liability\",\n    \"Business Interruption\",\n    \"Portable Business Content\",\n    \"Business Building and Contents\",\n    \"Equipment Breakdown\",\n    \"Theft, Money and Glass\",\n] as const;\n\n\n\nexport const FLOOR_CONSTRUCTION = {\n    \"Concrete\": \"CONC\",\n    \"Mixed\": \"MIXD\",\n    \"Stone\": \"STON\",\n    \"Tile\": \"TILE\",\n    \"Wood\": \"WOOD\",\n};\n\nexport const ROOF_CONSTRUCTION = {\n    \"Asbestos\": \"ASBES\",\n    \"Clay Tile\": \"CLATI\",\n    \"Concrete Slab\": \"CONSL\",\n    \"Fibro\": \"FIBRO\",\n    \"Glass\": \"GLASS\",\n    \"Membrane Roofing\": \"MEMRO\",\n    \"Metal (Aluminum, Colourbond, Iron)\": \"METAL\",\n    \"Others\": \"OTHER\",\n    \"Sandwich Panel / EPS\": \"SANEP\",\n    \"Slate Tile\": \"SLATE\",\n    \"Terracotta\": \"TERRA\",\n    \"Timber\": \"TIMBA\",\n};\n\nexport const WALL_CONSTRUCTION = {\n    'Asbestos': \"ASBES\",\n    'Brick': \"BRICK\",\n    'Brick Veneer': \"BRIVE\",\n    'Concrete': \"CONCR\",\n    'Curtain Wall': \"CURWA\",\n    'Fibro': \"FIBRO\",\n    'Masonry': \"MASON\",\n    'Metal': \"METAL\",\n    'Other Sheet Panel Cladding': \"OTSPC\",\n    'Others': \"OTHER\",\n    'Stone': \"STONE\",\n    'Timber': \"TIMBE\",\n};\n\n\nexport const CLAIM_TYPES = {\n    \"Fire\": \"FIRE\",\n    \"Impact\": \"IMPAC\",\n    \"Earthquake or Tsunami\": \"EAOTS\",\n    \"Explosion\": \"EXPLO\",\n    \"Machinery Breakdown & Electronic Equipment\": \"MBEE\",\n    \"Loss of access\": \"LOOAC\",\n    \"Power Surge\": \"POWSU\",\n    \"Cyclone\": \"CYCLO\",\n    \"Escape of Liquid\": \"ESCLI\",\n    \"Theft or burglary\": \"THBU\",\n    \"Portable Business Cover\": \"POBC\",\n    \"Bushfire\": \"BUSHF\",\n    \"Accidental loss or damage\": \"ACLOD\",\n    \"Civil Commotion or Riot\": \"CICOR\",\n    \"Lightnight or thunderbolt\": \"LINOT\",\n    \"Vandalism or Malicious Act\": \"VAMAL\",\n    \"Glass Breakage\": \"GLABR\",\n    \"Storm\": \"STORM\",\n};\n\nexport const FLOOR = {\n    \"Ground Floor\": \"GROFL\",\n    \"1st Floor\": \"1STFL\",\n    \"2nd Floor or Above\": \"2NDFL\",\n};\n\nexport const EXCESS = [\n    \"250\",\n    \"500\",\n    \"750\",\n    \"1000\",\n    \"1250\",\n    \"1500\",\n    \"1750\",\n    \"2000\",\n    \"2500\",\n    \"5000\",\n    \"10000\",\n] as const;\n\nexport const COVER = [\n    \"10000\",\n    \"20000\"\n] as const\n\nexport const TAXAUDIT = [\n    '0',\n    \"10000\",\n    \"20000\",\n    \"30000\",\n    \"40000\",\n    \"50000\",\n] as const\n\nexport const LIABILITY = [\n    \"5000000\",\n    \"10000000\",\n    \"20000000\",\n] as const\n\nexport const THEFT_SECURITY = {\n    \"Local Alarm\": \"localAlarm\",\n    \"Monitored Alarm\": \"monitoredAlarm\",\n    \"No Alarm\": \"noAlarm\",\n    \"No Security\": \"noSecurity\",\n}\n\nexport const THEFT_SECURITY_EXTRA = {\n    \"Deadlocks on all External Doors\": \"DeadlocksonallExternalDoors\",\n    \"Key Operated Locks on all External Windows\": \"KeyOpredLocksonallExterWins\",\n    \"Bars/Security Screens on all External Windows?\": \"Barsecurscreensonallexternwins\"\n}\n\nexport const COVERAGESROUTES = {\n    \"Business Building and Contents\": \"business-and-contents\",\n    \"Equipment Breakdown\": \"equipment-breakdown\",\n    \"Theft, Money and Glass\": \"theft-money-and-glass\",\n    \"Business Liability\": \"business-liability-coverage\",\n    \"Business Interruption\": \"business-interruption-coverage\",\n    \"Portable Business Content\": \"portable-business-contents-coverage\",\n}\n\n\nexport const THEFT_MONEY_AND_GLASS = [\n    \"Theft\",\n    \"Money\",\n    \"Glass\",\n] as const;\n\n\nexport const TYPE_OF_GLASS = {\n    \"Internal only\": \"internal\",\n    'External only': \"external\",\n    \"Internal and External\": \"internalAndExternal\",\n}\n\nexport const TYPE_OF_PLATE = {\n    \"Plate\": \"plate\",\n    \"Non-Plate\": \"nonPlate\",\n}\n\nexport const FIVE_YEAR_LIABILITY = {\n    \"Liability - Advertising Liability\": \"LIAAL\",\n    \"Liability - Personal Injury\": \"LIAPI\",\n    \"Liability - Property Damage\": \"LIAPD\",\n}\n\nexport const INDEMNITY_PERIOD = {\n    \"3 Months\": \"3M\",\n    \"6 Months\": \"6M\",\n    \"9 Months\": \"9M\",\n    \"12 Months\": \"12M\",\n    \"18 Months\": \"18M\",\n    \"24 Months\": \"24M\",\n    \"36 Months\": \"36M\",\n}\n\nexport const CATEGORY_OPTIONS = {\n    \"Amplifiers, speakers and sound equipment\": \"ASASE\",\n    \"Cleaning equipment\": \"CLEQU\",\n    \"Compressors and machinery\": \"COAMA\",\n    \"Laptops, notepads and tablet\": \"LNAT\",\n    \"Mobile phones\": \"MOPHO\",\n    \"Office equipment\": \"OFEQU\",\n    \"Photography and video equipment\": \"PAVEQ\",\n    \"Radio equipment\": \"RAEQU\",\n    \"Surveying equipment\": \"SUEQU\",\n    \"Tools\": \"TOOLS\",\n};\n\n\nexport const FORMTYPES = [\n    'coverage-selection',\n    'property-details',\n    'business-and-contents',\n    'equipment-breakdown',\n    'theft-money-and-glass',\n    'business-liability-coverage',\n    'business-interruption-coverage',\n    'portable-business-contents-coverage',\n    'further-and-endorsements-questions',\n    'premium-summary',\n    'quote-summary',\n] as const\n\nexport const FORMTYPES_WITH_VALUE = {\n    \"C0001788\": \"Business Building and Contents\",\n    \"C0001790\": \"Equipment Breakdown\",\n    \"C0001789\": \"Theft, Money and Glass\",\n    \"C0001785\": \"Business Liability\",\n    \"C0001786\": \"Business Interruption\",\n    \"C0001787\": \"Portable Business Content\",\n}\n\nexport const PREMIUM_QUESTION = {\n    \"Declaration Questions\": [\n        {\n            id: \"Hadanyinsurdeclinedorcancelled\",\n            question: \"Had any insurance declined or cancelled ?\",\n        },\n        {\n            id: \"ConvictedCriminalOffence\",\n            question: \"Been convicted of any criminal offence ?\",\n        },\n        {\n            id: \"BankruptorInsolvencyBusiness\",\n            question:\n                \"Been declared bankrupt or involved in a business which became insolvent or is subject to any form of insolvency administration ?\",\n        },\n        {\n            id: \"Sufferedlossordamagecovbyinspol\",\n            question:\n                \"Suffered any loss or damage which would have been covered by the proposed insurance policy ?\",\n        },\n    ],\n    Exemption: [\n        {\n            id: \"NSWstampDutyExemption\",\n            question: \"Are you claiming NSW stamp duty exemption ?\",\n        },\n    ],\n};\n\n\n// Zod Schemas\n\n\nexport const SUMEXCESS = z.enum(EXCESS, {\n    message: \"Excess is required\",\n});\n\nexport const SUMLIABILITY = z.enum(LIABILITY, {\n    message: \"Limit of Liability is required\",\n})\n\nexport const TAXAUDITCOVER = z.enum(TAXAUDIT, {\n    message: \"Tax Audit Sum Insured is required\",\n})\n\nexport const YEARLOSS = z.enum(generateSixYears() as [string, ...string[]], {\n    message: \"Year Of Loss is required\",\n})\n\n\nexport const CLAIMTYPES = z.enum(Object.keys(CLAIM_TYPES) as [string, ...string[]], {\n    message: \"Claim Type is required\",\n})\nexport const CLAIMTYPESLI = z.enum(Object.keys(FIVE_YEAR_LIABILITY) as [string, ...string[]], {\n    message: \"Claim Type is required\",\n})\n\nexport const AMOUNT = (value: string, optional?: boolean) => {\n\n    if (optional) {\n        return z.string({\n            message: `${value} is required`,\n        }).optional().transform((data, ctx) => {\n\n            const parsed = parseCurrency(data || \"\");\n\n            if (Number(parsed) >= Number(100000000000)) {\n                ctx.addIssue({\n                    code: z.ZodIssueCode.custom,\n                    message: `${value} cannot be greater than 100,000,000,000`,\n                })\n            }\n\n            return parsed;\n        })\n    }\n\n    return z.string({\n        message: `${value} is required`,\n    }).nonempty({\n        message: `${value} is required`,\n    }).transform((data, ctx) => {\n\n        const parsed = parseCurrency(data);\n\n        if (parsed === \"\") {\n            ctx.addIssue({\n                code: z.ZodIssueCode.custom,\n                message: `${value} is required`,\n            })\n        }\n\n        if (Number(parsed) >= Number(100000000000)) {\n            ctx.addIssue({\n                code: z.ZodIssueCode.custom,\n                message: `${value} cannot be greater than 100,000,000,000`,\n            })\n        }\n\n\n        return parsed;\n    })\n\n}\n\n\nexport const CLAIMS_IN_LAST_FIVE_YEARS = z.object({\n    YearOfLoss: YEARLOSS,\n    ClaimType: CLAIMTYPES,\n    Value: AMOUNT(\"Value\"),\n})\n\nexport const CLAIMS_IN_LAST_FIVE_YEARS_LI = z.object({\n    YearOfLoss: YEARLOSS,\n    ClaimType: CLAIMTYPESLI,\n    Value: AMOUNT(\"Value\"),\n})\n\n\nexport const CLAIMS_BOOLEAN = z.enum([\"yes\", \"no\"], {\n    message: \"Claim In Last Five Year is required\",\n})"]}