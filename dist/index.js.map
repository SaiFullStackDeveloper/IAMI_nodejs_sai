{"version":3,"sources":["/Users/apple/Documents/Satya/UpW/Nodejs/iami-nodejs/dist/index.js","../src/index.ts"],"names":[],"mappings":"AAAA;AACE;AACF,sDAA4B;AAC5B;AACE;AACA;AACF,sDAA4B;AAC5B,+BAA4B;AAC5B,+BAA4B;AAC5B,+BAA4B;AAC5B,+BAA4B;AAC5B,+BAA4B;AAC5B,+BAA4B;AAC5B,+BAA4B;AAC5B,+BAA4B;AAC5B,+BAA4B;AAC5B,+BAA4B;AAC5B,+BAA4B;AAC5B,+BAA4B;AAC5B,+BAA4B;AAC5B,+BAA4B;AAC5B,+BAA4B;AAC5B,+BAA4B;AAC5B,+BAA4B;AAC5B,+BAA4B;AAC5B,+BAA4B;AAC5B,+BAA4B;AAC5B,+BAA4B;AAC5B,+BAA4B;AAC5B,+BAA4B;AAC5B,+BAA4B;AAC5B,+BAA4B;AAC5B,+BAA4B;AAC5B,+BAA4B;AAC5B,+BAA4B;AAC5B;AACE;AACF,sDAA4B;AAC5B;AACE;AACF,sDAA4B;AAC5B,+BAA4B;AAC5B;AACA;ACpCA,IAAM,OAAA,EAAS,oBAAA,CAAI,MAAA,CAAO,oBAAA,CAAI,IAAA,EAAM,CAAA,EAAA,GAAM;AACxC,EAAA,MAAM,EAAE,QAAA,EAAU,IAAA,EAAM,KAAK,EAAA,EAAI,oBAAA;AACjC,EAAA,uBAAA,CAAO,IAAA,CAAK,CAAA,QAAA,EAAW,QAAQ,CAAA,yBAAA,EAA4B,IAAI,CAAA,CAAA,EAAI,IAAI,CAAA,CAAA;AACxE;AAGkC;AAC7B,EAAA;AACY,IAAA;AACM,IAAA;AACwB,IAAA;AAC9B,EAAA;AAC4C,IAAA;AAC5C,IAAA;AAChB,EAAA;AACD;AAE2B;AACkB,EAAA;AACzB,EAAA;AACU,IAAA;AACd,IAAA;AACd,EAAA;AAC8C,EAAA;AACjD;AAEkC;AACC","file":"/Users/apple/Documents/Satya/UpW/Nodejs/iami-nodejs/dist/index.js","sourcesContent":[null,"import { env } from \"@/common/config/env\";\nimport { app, logger } from \"@/server\";\nimport { mongoDB } from \"./common/config/mongodb\";\nimport { redis } from \"./common/config/redis\";\n\n// import { redisDB } from \"./common/config/redis\";\n\nconst server = app.listen(env.PORT, () => {\n  const { NODE_ENV, HOST, PORT } = env;\n  logger.info(`Server (${NODE_ENV}) running on port http://${HOST}:${PORT}`);\n});\n\n\nserver.on('listening', async () => {\n  try {\n    await mongoDB()\n    await redis.connect()\n    logger.info(\"Connected to MongoDB and Redis\");\n  } catch (error) {\n    logger.error(\"Error connecting to MongoDB or Redis\", error);\n    process.exit(1); // Exit the process to trigger a restart\n  }\n})\n\nconst onCloseSignal = () => {\n  logger.info(\"sigint received, shutting down\");\n  server.close(() => {\n    logger.info(\"server closed\");\n    process.exit();\n  });\n  setTimeout(() => process.exit(1), 10000).unref(); // Force shutdown after 10s\n};\n\nprocess.on(\"SIGINT\", onCloseSignal);\nprocess.on(\"SIGTERM\", onCloseSignal);\n"]}